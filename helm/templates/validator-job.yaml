{{- $values := include "cloudzero-agent.values" . | fromYaml -}}
{{- $internalDefaults := include "cloudzero-agent.internalDefaults" . | fromYaml -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "cloudzero-agent.validatorJobName" . }}
  namespace: {{ .Release.Namespace }}
  {{- $annotations := merge $values.defaults.annotations (dict "checksum/values" (($values.jobConfigID | default (. | toYaml | sha256sum)) | default ($values | toYaml | sha256sum))) -}}
  {{- include "cloudzero-agent.generateAnnotations" $annotations | nindent 2 }}
  labels:
    {{- include "cloudzero-agent.insightsController.labels" . | nindent 4 }}
spec:
  template:
    metadata:
      name: {{ include "cloudzero-agent.validatorJobName" . }}
      namespace: {{ .Release.Namespace }}
      labels:
        {{- include "cloudzero-agent.insightsController.validatorJob.matchLabels" . | nindent 8 }}
      {{- include "cloudzero-agent.generateAnnotations" $values.defaults.annotations | nindent 6 }}
    spec:
      serviceAccountName: {{ include "cloudzero-agent.serviceAccountName" . }}
      restartPolicy: OnFailure
      {{- include "cloudzero-agent.generateDNSInfo" (dict "defaults" $values.defaults.dns) | nindent 6 }}
      {{- include "cloudzero-agent.generatePriorityClassName" $values.defaults.priorityClassName | nindent 6 }}
      containers:
        - name: run-validator
          {{- include "cloudzero-agent.generateImage" (dict "defaults" $values.defaults.image "image" $values.components.agent.image "compat" $values.validator.image) | nindent 10 }}
          env:
            {{- include "cloudzero-agent.validatorEnv" . | nindent 12 }}
          command:
            - /app/cloudzero-agent-validator
            - diagnose
            - config-load 
            - -f
            - /cloudzero/config/validator/validator.yml
            - --config-webhook
            - {{ include "cloudzero-agent.insightsController.configurationMountPath" . }}/server-config.yaml
            - --config-aggregator
            - {{ $values.aggregator.mountRoot }}/config/config.yml
          resources:
            {{- toYaml $values.insightsController.resources | nindent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config/prometheus/configmaps/
            - name: config-validator
              mountPath: /cloudzero/config/validator # validator.yml
            - name: config-webhook
              mountPath: {{ include "cloudzero-agent.insightsController.configurationMountPath" . }} # server-config.yaml
            - name: config-aggregator
              mountPath: {{ $values.aggregator.mountRoot }}/config # config.yaml
            - name: aggregator-persistent-storage
              mountPath: {{ $values.aggregator.mountRoot }}/data
          {{- if or $values.existingSecretName $values.apiKey }}
            - name: cloudzero-api-key
              mountPath: {{ $values.serverConfig.containerSecretFilePath }}
              subPath: ""
              readOnly: true
          {{- end }}
            {{- with $values.insightsController.volumeMounts }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ template "cloudzero-agent.configMapName" . }}
        - name: config-validator
          configMap:
            name: {{ include "cloudzero-agent.validatorConfigMapName" . }}
        - name: config-webhook
          configMap:
            name: {{ include "cloudzero-agent.webhookConfigMapName" . }}
        - name: config-aggregator
          configMap:
            name: {{ include "cloudzero-agent.aggregator.name" . }}
        {{- if or $values.existingSecretName $values.apiKey }}
        - name: cloudzero-api-key
          secret:
            secretName: {{ include "cloudzero-agent.secretName" . }}
        {{- end }}
        {{- with $values.insightsController.volumes }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        - name: aggregator-persistent-storage
          emptyDir: {}
      {{- include "cloudzero-agent.generateNodeSelector" (dict "default" $values.defaults.nodeSelector "nodeSelector" ($values.initBackfillJob.nodeSelector | default $values.insightsController.server.nodeSelector)) | nindent 6 }}
      {{- include "cloudzero-agent.generateAffinity" (dict "default" $values.defaults.affinity "affinity" $values.insightsController.server.affinity) | nindent 6 }}
      {{- include "cloudzero-agent.generateTolerations" (concat $values.defaults.tolerations $values.initBackfillJob.tolerations $values.insightsController.server.tolerations) | nindent 6 }}
