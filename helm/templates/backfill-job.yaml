{{- $values := include "cloudzero-agent.values" . | fromYaml -}}
{{- if $values.insightsController.enabled }}
{{ $backFillValues := (include "cloudzero-agent.backFill" . | fromYaml) }}
{{- if $backFillValues.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "cloudzero-agent.initBackfillJobName" . }}
  namespace: {{ .Release.Namespace }}
  {{- include "cloudzero-agent.generateAnnotations" (merge $values.defaults.annotations $values.initBackfillJob.annotations) | nindent 2 }}
  labels:
    {{- include "cloudzero-agent.insightsController.labels" . | nindent 4 }}
spec:
  template:
    metadata:
      name: {{ include "cloudzero-agent.initBackfillJobName" . }}
      namespace: {{ .Release.Namespace }}
      labels:
        {{- include "cloudzero-agent.insightsController.initBackfillJob.matchLabels" . | nindent 8 }}
      {{- include "cloudzero-agent.generateAnnotations" $values.defaults.annotations | nindent 6 }}
    spec:
      serviceAccountName: {{ include "cloudzero-agent.serviceAccountName" . }}
      restartPolicy: OnFailure
      {{- include "cloudzero-agent.generateDNSInfo" (dict "defaults" $values.defaults.dns) | nindent 6 }}
      {{- include  "cloudzero-agent.initBackfillJob.imagePullSecrets" . | nindent 6 }}
      {{- include "cloudzero-agent.generatePriorityClassName" $values.defaults.priorityClassName | nindent 6 }}
      containers:
        - name: init-scrape
          {{- include "cloudzero-agent.generateImage" (dict "defaults" $values.defaults.image "image" $values.components.agent.image "compat" $values.insightsController.server.image) | nindent 10 }}
          command:
            - /app/cloudzero-webhook
          args:
            - -config
            - "{{ include "cloudzero-agent.insightsController.configurationMountPath" . }}/server-config.yaml"
            - -backfill
          resources:
            {{- toYaml $values.insightsController.resources | nindent 12 }}
          volumeMounts:
            - name: insights-server-config
              mountPath: {{ include "cloudzero-agent.insightsController.configurationMountPath" . }}
          {{- if or $values.insightsController.volumeMounts $values.insightsController.tls.enabled }}
          {{- if or $values.existingSecretName $values.apiKey }}
            - name: cloudzero-api-key
              mountPath: {{ $values.serverConfig.containerSecretFilePath }}
              subPath: ""
              readOnly: true
          {{- end }}
            {{- with $values.insightsController.volumeMounts }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- end }}
      {{- if or $values.insightsController.volumes $values.insightsController.tls.enabled }}
      volumes:
        - name: insights-server-config
          configMap:
            name: {{ include "cloudzero-agent.webhookConfigMapName" . }}
        {{- if $values.insightsController.tls.enabled }}
        - name: tls-certs
          secret:
            secretName: {{ include "cloudzero-agent.tlsSecretName" . }}
        {{- end }}
        {{- if or $values.existingSecretName $values.apiKey }}
        - name: cloudzero-api-key
          secret:
            secretName: {{ include "cloudzero-agent.secretName" . }}
        {{- end }}
        {{- with $values.insightsController.volumes }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- include "cloudzero-agent.generateNodeSelector" (dict "default" $values.defaults.nodeSelector "nodeSelector" ($values.initBackfillJob.nodeSelector | default $values.insightsController.server.nodeSelector)) | nindent 6 }}
      {{- include "cloudzero-agent.generateAffinity" (dict "default" $values.defaults.affinity "affinity" $values.insightsController.server.affinity) | nindent 6 }}
      {{- include "cloudzero-agent.generateTolerations" (concat $values.defaults.tolerations $values.initBackfillJob.tolerations $values.insightsController.server.tolerations) | nindent 6 }}
{{- end }}
{{- end }}
