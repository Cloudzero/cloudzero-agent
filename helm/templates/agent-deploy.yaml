{{- $values := include "cloudzero-agent.values" . | fromYaml -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  {{- include "cloudzero-agent.generateAnnotations" $values.server.deploymentAnnotations | nindent 2 }}
  labels:
    {{- include "cloudzero-agent.server.labels" . | nindent 4 }}
  {{- include "cloudzero-agent.generateAnnotations" $values.defaults.annotations | nindent 2 }}
  name: {{ template "cloudzero-agent.server.fullname" . }}
  namespace: {{ include "cloudzero-agent.namespace" . }}
spec:
  selector:
    matchLabels:
      {{- include "cloudzero-agent.server.matchLabels" . | nindent 6 }}
  replicas: 1
  template:
    metadata:
      {{- include "cloudzero-agent.generateAnnotations" $values.server.podAnnotations | nindent 8 }}
      labels:
        {{- include "cloudzero-agent.server.labels" . | nindent 8 }}
        {{- if $values.server.podLabels}}
        {{ toYaml $values.server.podLabels | nindent 8 }}
        {{- end}}
    spec:
      {{- include "cloudzero-agent.generatePriorityClassName" ($values.defaults.priorityClassName | default $values.server.priorityClassName) | nindent 6 }}
      serviceAccountName: {{ template "cloudzero-agent.serviceAccountName" . }}
      initContainers:
        - name: {{ $values.validator.name }}-copy
          {{- include "cloudzero-agent.generateImage" (dict "defaults" $values.defaults.image "image" $values.components.agent.image "compat" $values.validator.image) | nindent 10 }}
          env:
            {{- include "cloudzero-agent.validatorEnv" . | nindent 12 }}
          command:
            - /app/cloudzero-agent-validator
            - install
            - --destination
            - /checks/bin/cloudzero-agent-validator
          {{- with $values.validator.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
          {{- include "cloudzero-agent.apiKeyVolumeMount" . | nindent 12 }}
            - name: lifecycle-volume
              mountPath: /checks/bin/
            - name: validator-config-volume
              mountPath: /checks/config/
        - name: {{ $values.validator.name }}-run
          {{- include "cloudzero-agent.generateImage" (dict "defaults" $values.defaults.image "image" $values.components.agent.image "compat" $values.validator.image) | nindent 10 }}
          env:
            {{- include "cloudzero-agent.validatorEnv" . | nindent 12 }}
          command:
            - /checks/bin/cloudzero-agent-validator
            - diagnose
            - pre-start
            - -f
            - /checks/config/validator.yml
          {{- with $values.validator.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
          {{- include "cloudzero-agent.apiKeyVolumeMount" . | nindent 12 }}
            - name: lifecycle-volume
              mountPath: /checks/bin/
            - name: validator-config-volume
              mountPath: /checks/config/
      containers:
        {{- if $values.configmapReload.prometheus.enabled }}
        - name: {{ template "cloudzero-agent.name" . }}-{{ $values.server.name }}-configmap-reload
          {{- include "cloudzero-agent.generateImage" (dict "defaults" $values.defaults.image "image" $values.components.prometheusReloader.image "compat" $values.configmapReload.prometheus.image) | nindent 10 }}
          args:
            - --watched-dir=/etc/config
            - --reload-url=http://127.0.0.1:9090/-/reload
          {{- with $values.configmapReload.prometheus.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true
        {{- end }}
        - name: {{ template "cloudzero-agent.name" . }}-server
          {{/* This is a little special because we want to fall back on the .Chart.AppVersion */}}
          {{- include "cloudzero-agent.generateImage" (dict "defaults" $values.defaults.image "image" $values.components.prometheus.image "compat" (dict "repository" $values.server.image.repository "tag" ($values.server.image.tag | default $values.components.prometheus.image.tag | default .Chart.AppVersion) "digest" $values.server.image.digest "pullPolicy" $values.server.image.pullPolicy)) | nindent 10 }}
          {{- if $values.server.env }}
          env:
{{ toYaml $values.server.env | indent 12}}
            {{- include "cloudzero-agent.validatorEnv" . | nindent 12 }}
          {{- end }}
          lifecycle:
            postStart:
              exec:
                command:
                  - /checks/cloudzero-agent-validator
                  - diagnose
                  - post-start
                  - -f
                  - /checks/app/config/validator.yml
            preStop:
              exec:
                command:
                  - /checks/cloudzero-agent-validator
                  - diagnose
                  - pre-stop
                  - -f
                  - /checks/app/config/validator.yml
          args:
            {{ toYaml $values.server.args | nindent 12}}
            {{- if $values.server.agentMode }}
            - --enable-feature=agent
            {{- end }}
          ports:
            - containerPort: 9090
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTP
            initialDelaySeconds: {{ default 30 $values.server.readinessProbeInitialDelay }}
            periodSeconds: {{ default 5 $values.server.readinessProbePeriodSeconds }}
            timeoutSeconds: {{ default 4 $values.server.readinessProbeTimeout }}
            failureThreshold: {{ default 3 $values.server.readinessProbeFailureThreshold }}
            successThreshold: {{ default 1 $values.server.readinessProbeSuccessThreshold }}
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTP
            initialDelaySeconds: {{ default 30 $values.server.livenessProbeInitialDelay }}
            periodSeconds: {{ default 15 $values.server.livenessProbePeriodSeconds }}
            timeoutSeconds: {{ default 10 $values.server.livenessProbeTimeout }}
            failureThreshold: {{ default 3 $values.server.livenessProbeFailureThreshold }}
            successThreshold: {{ default 1 $values.server.livenessProbeSuccessThreshold }}
          {{- with $values.server.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config/prometheus/configmaps/
            - name: cloudzero-agent-storage-volume
              mountPath: {{ $values.server.persistentVolume.mountPath }}
              subPath: "{{ $values.server.persistentVolume.subPath }}"
            - name: lifecycle-volume
              mountPath: /checks/
            - name: validator-config-volume
              mountPath: /checks/app/config/
            {{- include "cloudzero-agent.apiKeyVolumeMount" . | nindent 12 }}
      securityContext:
        runAsUser: 65534
        runAsNonRoot: true
        runAsGroup: 65534
        fsGroup: 65534
      {{- include "cloudzero-agent.generateDNSInfo" (dict "defaults" $values.defaults.dns) | nindent 6 }}
      {{- include "cloudzero-agent.server.imagePullSecrets" . | nindent 6 -}}
      {{- include "cloudzero-agent.generateNodeSelector" (dict "default" $values.defaults.nodeSelector "nodeSelector" $values.server.nodeSelector) | nindent 6 }}
      {{- include "cloudzero-agent.generateTolerations" (concat $values.defaults.tolerations $values.server.tolerations) | nindent 6 }}
      {{- include "cloudzero-agent.generateAffinity" (dict "default" $values.defaults.affinity "affinity" $values.server.affinity) | nindent 6 }}
    {{- with $values.server.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      terminationGracePeriodSeconds: {{ default 300 $values.server.terminationGracePeriodSeconds }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ template "cloudzero-agent.configMapName" . }}
        - name: validator-config-volume
          configMap:
            name: {{ template "cloudzero-agent.validatorConfigMapName" . }}
        - name: lifecycle-volume
          emptyDir: {}
        {{- if or $values.existingSecretName $values.apiKey }}
        - name: cloudzero-api-key
          secret:
            secretName: {{ include "cloudzero-agent.secretName" . }}
        {{- end }}
        - name: cloudzero-agent-storage-volume
        {{- if $values.server.persistentVolume.enabled }}
          persistentVolumeClaim:
            claimName: {{ if $values.server.persistentVolume.existingClaim }}{{ $values.server.persistentVolume.existingClaim }}{{- else }}{{ template "cloudzero-agent.server.fullname" . }}{{- end }}
        {{- else }}
          emptyDir:
          {{- if $values.server.emptyDir.sizeLimit }}
            sizeLimit: {{ $values.server.emptyDir.sizeLimit }}
          {{- else }}
            {}
          {{- end }}
        {{- end }}
