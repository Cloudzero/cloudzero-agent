# Helm Chart Development Cheatsheet

## Listing Helm Releases

To list all Helm releases in a specific namespace:

```bash
helm list --namespace <namespace>
```

To list all Helm releases across all namespaces:

```bash
helm list --all-namespaces
```

## Getting Deployed Chart Values and Manifest

### 1. Get Deployed Chart Values

To retrieve the values used in a deployed release:

```bash
helm get values <release-name> --namespace <namespace>
```

### 2. Get Deployed Chart Manifest

To view the Kubernetes manifests of a deployed release:

```bash
helm get manifest <release-name> --namespace <namespace>
```

## Rendering the Chart Before Deployment

### 1. Navigate to the Helm Directory

To move into the Helm directory:

```bash
cd helm
```
### 2. Create an Override YAML File

To create an override YAML file with custom values, use the following command:

```bash
cat > override-values.yaml <<EOF
cloudAccountId: "975482786146"
clusterName: aws-cirrus-jb-cluster
region: us-east-2
existingSecretName: existing-dev-api-key
host: dev-api.cloudzero.com

commonMetaLabels:
    engr.os.com/component: cloudzero
    engr.os.com/initiative: odc
    engr.os.com/ring: ring
    engr.os.com/service: cloudzero
    engr.os.com/stamp: stamp

insightsController:
    annotations:
        enabled: false
        patterns:
        - .*
    enabled: true
    labels:
        enabled: true
        patterns:
        - .*
    resources:
        deployments: true
        namespaces: true
        pods: true
    tls:
        caBundle: ""
        crt: ""
        enabled: true
        key: ""
        mountPath: /etc/certs
        secret:
            create: true
            name: ""
        useCertManager: false
EOF
```

> **Note:** Ensure the values in the `override-values.yaml` file match your specific deployment requirements.

### 2. Build Chart Dependencies

To download and build the chart dependencies:

```bash
helm dependency build
```

### 3. Render Manifests and Values Without Deploying

To preview the combined values that will be used during deployment (without applying them):

```bash
helm template <release-name> . --values values.yaml --values override-values.yaml --dry-run --namespace <namespace>
```

> **Note:** Replace `<release-name>` with your Helm release name (e.g., `cloudzero-agent`).

---

## Fake Deployments with `--dry-run`

To simulate a deployment and debug potential issues without actually deploying:

```bash
helm install <release-name> . --values values.yaml --values override-values.yaml --namespace <namespace> --dry-run --debug
```

---

## Upgrade with Debugging

To upgrade an existing release and inspect the changes before applying:

```bash
helm upgrade --install <release-name> . --values values.yaml --values override-values.yaml --namespace <namespace> --dry-run --debug
```

### 5. Check Current Release Values

To view the values of an already deployed release:

```bash
helm get values <release-name> --namespace <namespace>
```

### 6. View Deployed Manifests

To inspect the manifests of a deployed release:

```bash
helm get manifest <release-name> --namespace <namespace>
```

### 7. Lint the Chart

To validate the chart for potential errors:

```bash
helm lint . --values override-values.yaml
```

### 8. Package the Chart

To package the chart into a `.tgz` file for distribution:

```bash
helm package .
```

### 9. Run Tests

To run tests for a deployed release:

```bash
helm test <release-name> --namespace <namespace>
```

---
 helm show
 helm show all
 helm search repo cloudzero-beta/cloudzero-agent --devel
 helm repo add cloudzero-beta https://cloudzero.github.io/cloudzero-charts/beta\nhelm repo update
 helm list --namespace  cloudzero-agent
 helm list --all-namespaces
 helm get values cloudzero-agent --namespace cloudzero-agent
 helm dependency build
 helm package .
 helm test cloudzero-agent --namespace cloudzero-agent
 helm get manifest  cloudzero-agent -n cloudzero-agent
 helm rollback cloudzero-agent --namespace cloudzero-agent
 helm lint cloudzero-agent . --values values.yaml --values override-values.yaml --namespace cloudzero-agent --debug\n
 helm uninstall cloudzero-agent -n cloudzero-agent
 helm template cloudzero-agent . --values values.yaml --values override-values.yaml --dry-run --namespace cloudzero-agent --debug
 helm install cloudzero-agent . --values values.yaml --values override-values.yaml  --namespace cloudzero-agent --dry-run --debug
 helm upgrade --install cloudzero-agent . --values values.yaml --values override-values.yaml  --namespace cloudzero-agent